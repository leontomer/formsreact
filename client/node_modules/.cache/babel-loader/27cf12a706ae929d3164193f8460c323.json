{"ast":null,"code":"var _jsxFileName = \"C:\\\\formsreact\\\\client\\\\src\\\\FormSubmit.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { getFormName } from \"./actions/getFormName\";\nimport { getFormFields } from \"./actions/getFormFields\";\nexport default function FormSubmit(props) {\n  const [inputName, setInputName] = useState(\"\");\n  const [fields, setFields] = useState([]);\n  const [formName, setFormName] = useState(\"\");\n  const [inputVal, setInputVal] = useState({});\n  let history = useHistory(); //console.log(props.match.params.FormId);\n\n  useEffect(() => {\n    (async function getFormNameFunc() {\n      const formNameRes = await getFormName(props.match.params.FormId);\n      setFormName(formNameRes.data.formName);\n    })();\n  });\n  useEffect(() => {\n    (async function getFormFieldsFunc() {\n      const formNameRes = await getFormFields(props.match.params.FormId);\n    })();\n\n    setFields(formNameRes.data);\n\n    for (let i = 0; i < fields.length; i++) {\n      inputVal[fields[i]._id] = \"\";\n    } //setType(res.data.inputType);\n\n  }); //console.log(forms);\n  //console.log(forms);\n\n  const handleSubmit = () => {\n    axios.post(\"/forms/addFormInput\", {\n      inputName: inputName,\n      inputVal: inputVal,\n      id: props.match.params.FormId\n    }).then(res => console.log(res)); // Alert();\n\n    history.push(\"/\");\n    history.go(); //console.log(inputVal);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, formName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, fields.map(field => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"flabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \" \", field.inputType, \": \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: field.inputType,\n    name: field.inputName,\n    value: inputVal[field._id],\n    onChange: name => inputVal[field._id] = name.target.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["C:/formsreact/client/src/FormSubmit.js"],"names":["React","useEffect","useState","axios","Container","SaveIcon","Button","useHistory","getFormName","getFormFields","FormSubmit","props","inputName","setInputName","fields","setFields","formName","setFormName","inputVal","setInputVal","history","getFormNameFunc","formNameRes","match","params","FormId","data","getFormFieldsFunc","i","length","_id","handleSubmit","post","id","then","res","console","log","push","go","map","field","inputType","name","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getFormName } from \"./actions/getFormName\";\r\nimport { getFormFields } from \"./actions/getFormFields\";\r\nexport default function FormSubmit(props) {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [fields, setFields] = useState([]);\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [inputVal, setInputVal] = useState({});\r\n  let history = useHistory();\r\n\r\n  //console.log(props.match.params.FormId);\r\n  useEffect(() => {\r\n    (async function getFormNameFunc() {\r\n      const formNameRes = await getFormName(props.match.params.FormId);\r\n      setFormName(formNameRes.data.formName);\r\n    })();\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async function getFormFieldsFunc() {\r\n      const formNameRes = await getFormFields(props.match.params.FormId);\r\n    })();\r\n    setFields(formNameRes.data);\r\n    for (let i = 0; i < fields.length; i++) {\r\n      inputVal[fields[i]._id] = \"\";\r\n    }\r\n    //setType(res.data.inputType);\r\n  });\r\n  //console.log(forms);\r\n\r\n  //console.log(forms);\r\n\r\n  const handleSubmit = () => {\r\n    axios\r\n      .post(\"/forms/addFormInput\", {\r\n        inputName: inputName,\r\n        inputVal: inputVal,\r\n        id: props.match.params.FormId,\r\n      })\r\n\r\n      .then((res) => console.log(res));\r\n    // Alert();\r\n    history.push(\"/\");\r\n    history.go();\r\n    //console.log(inputVal);\r\n  };\r\n  return (\r\n    <Container fixed>\r\n      <div>\r\n        {formName}\r\n        <br></br>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {fields.map((field) => (\r\n            <div>\r\n              <label htmlFor=\"flabel\"> {field.inputType}: </label>\r\n\r\n              <input\r\n                required\r\n                type={field.inputType}\r\n                name={field.inputName}\r\n                value={inputVal[field._id]}\r\n                onChange={(name) => (inputVal[field._id] = name.target.value)}\r\n              ></input>\r\n              <br></br>\r\n            </div>\r\n          ))}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}