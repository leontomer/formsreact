{"ast":null,"code":"var _jsxFileName = \"C:\\\\formsreact\\\\client\\\\src\\\\components\\\\FormBuilder\\\\FormBuilder.js\";\nimport React, { useState } from \"react\";\nimport { addForm } from \"./actions/addForm\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nexport default function FormBuilder(props) {\n  const [fieldLabel, setFieldLabel] = useState(\"\");\n  const [inputName, setInputName] = useState(\"\");\n  const [inputType, setInputType] = useState(\"text\");\n  const [formName, setFormName] = useState(\"\");\n  const [fields, setFields] = useState([]);\n  const types = [\"text\", \"color\", \"date\", \"email\", \"tel\", \"number\"];\n  let history = useHistory();\n\n  const onSave = () => {\n    console.log(fields);\n\n    (async function addFormFunc() {\n      await addForm(formName, fields);\n    })();\n\n    history.push(\"/\");\n    history.go();\n  };\n\n  const onSubmit = e => {\n    setFields([...fields, {\n      fieldLabel: fieldLabel,\n      inputName: inputName,\n      inputType: inputType\n    }]);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"flabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \" field label: \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"flabel\",\n    label: \"Required\",\n    value: fieldLabel,\n    onChange: text => setFieldLabel(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"iname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"input name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"iname\",\n    name: \"iname\",\n    value: inputName,\n    onChange: text => setInputName(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    value: inputType,\n    onChange: text => setInputType(text.target.value),\n    label: \"Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, types.map(type => /*#__PURE__*/React.createElement(MenuItem, {\n    value: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, type))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"form name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"formname\",\n    name: \"formname\",\n    value: formName,\n    onChange: text => setFormName(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), fields.map(field => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: field.fieldLabel,\n    name: field.inputName,\n    type: field.inputType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/formsreact/client/src/components/FormBuilder/FormBuilder.js"],"names":["React","useState","addForm","useHistory","TextField","SaveIcon","Button","Container","Select","MenuItem","FormBuilder","props","fieldLabel","setFieldLabel","inputName","setInputName","inputType","setInputType","formName","setFormName","fields","setFields","types","history","onSave","console","log","addFormFunc","push","go","onSubmit","e","preventDefault","text","target","value","map","type","field"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { addForm } from \"./actions/addForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function FormBuilder(props) {\r\n  const [fieldLabel, setFieldLabel] = useState(\"\");\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputType, setInputType] = useState(\"text\");\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [fields, setFields] = useState([]);\r\n  const types = [\"text\", \"color\", \"date\", \"email\", \"tel\", \"number\"];\r\n  let history = useHistory();\r\n\r\n  const onSave = () => {\r\n    console.log(fields);\r\n    (async function addFormFunc() {\r\n      await addForm(formName, fields);\r\n    })();\r\n\r\n    history.push(\"/\");\r\n    history.go();\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    setFields([\r\n      ...fields,\r\n      { fieldLabel: fieldLabel, inputName: inputName, inputType: inputType },\r\n    ]);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <div>\r\n        <form onSubmit={onSubmit}>\r\n          <br></br>\r\n          <label htmlFor=\"flabel\"> field label: </label>\r\n\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"flabel\"\r\n            label=\"Required\"\r\n            value={fieldLabel}\r\n            onChange={(text) => setFieldLabel(text.target.value)}\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"iname\">input name: </label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"iname\"\r\n            name=\"iname\"\r\n            value={inputName}\r\n            onChange={(text) => setInputName(text.target.value)}\r\n          />\r\n          <br />\r\n\r\n          <Select\r\n            required\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={inputType}\r\n            onChange={(text) => setInputType(text.target.value)}\r\n            label=\"Type\"\r\n          >\r\n            {types.map((type) => (\r\n              <MenuItem value={type}>{type}</MenuItem>\r\n            ))}\r\n            {/* <MenuItem value=\"text\">text</MenuItem>\r\n            <MenuItem value=\"color\">color</MenuItem>\r\n            <MenuItem value=\"date\">date</MenuItem>\r\n            <MenuItem value=\"email\">email</MenuItem>\r\n            <MenuItem value=\"tel\">tel</MenuItem>\r\n            <MenuItem value=\"number\">number</MenuItem> */}\r\n          </Select>\r\n          <br></br>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            type=\"submit\"\r\n          >\r\n            Add\r\n          </Button>\r\n        </form>\r\n        <br></br>\r\n        <form onSubmit={onSave}>\r\n          <label htmlFor=\"formname\">form name: </label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"formname\"\r\n            name=\"formname\"\r\n            value={formName}\r\n            onChange={(text) => setFormName(text.target.value)}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            type=\"submit\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n        <br></br>\r\n        {fields.map((field) => (\r\n          <div>\r\n            <TextField\r\n              label={field.fieldLabel}\r\n              name={field.inputName}\r\n              type={field.inputType}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}