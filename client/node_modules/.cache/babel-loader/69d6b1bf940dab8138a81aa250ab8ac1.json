{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leont\\\\formsreact\\\\src\\\\FormBuilder.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; //import { useHistory } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport createHistory from \"history/createBrowserHistory\";\nexport default function FormBuilder(props) {\n  const [fieldLabel, setFieldLabel] = useState(\"\");\n  const [inputName, setInputName] = useState(\"\");\n  const [inputType, setInputType] = useState(\"text\");\n  const [formName, setFormName] = useState(\"\");\n  const [fields, setFields] = useState([]);\n  const [inputs, setInputs] = useState([]); // let history = useHistory();\n\n  const history = createHistory();\n\n  const onSave = () => {\n    console.log(fields);\n    axios.post(\"http://localhost:5000/forms/addForm\", {\n      formName: formName,\n      fields: fields\n    }).then(res => console.log(res));\n    setFields([]);\n    setFormName(\"\"); // history.push(\"/\");\n    // history.go();\n\n    history.go(0);\n  }; // useEffect(() => {\n  //   console.log(fieldLabel);\n  // }, [fieldLabel]);\n  // useEffect(() => {\n  //   console.log(inputName);\n  // }, [inputName]);\n  // useEffect(() => {\n  // }, [inputType]);\n\n\n  const onSubmit = e => {\n    console.log(fieldLabel);\n    console.log(inputName);\n    console.log(inputType);\n    setFields([...fields, {\n      fieldLabel: fieldLabel,\n      inputName: inputName,\n      inputType: inputType\n    }]);\n    e.preventDefault(); //console.log(fields);\n  };\n\n  useEffect(() => {\n    console.log(\"entered\");\n    console.log(fields);\n    console.log(fields.length);\n  }, [fields]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormBuilder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"/FormBuilder\",\n    method: \"get\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"flabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \" field label:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"flabel\",\n    name: \"flabel\",\n    value: fieldLabel,\n    onChange: text => setFieldLabel(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"iname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"input name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"iname\",\n    name: \"iname\",\n    value: inputName,\n    onChange: text => setInputName(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"inputType\",\n    name: \"input type\",\n    value: inputType,\n    onChange: text => setInputType(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"text\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"color\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"date\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"tel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"tel\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"number\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"form name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"formname\",\n    name: \"formname\",\n    value: formName,\n    onChange: text => setFormName(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Save\",\n    onClick: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), fields.map(field => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: field.fieldLabel,\n    name: field.inputName,\n    type: field.inputType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/leont/formsreact/src/FormBuilder.js"],"names":["React","useEffect","useState","axios","TextField","createHistory","FormBuilder","props","fieldLabel","setFieldLabel","inputName","setInputName","inputType","setInputType","formName","setFormName","fields","setFields","inputs","setInputs","history","onSave","console","log","post","then","res","go","onSubmit","e","preventDefault","length","text","target","value","map","field"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nexport default function FormBuilder(props) {\r\n  const [fieldLabel, setFieldLabel] = useState(\"\");\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputType, setInputType] = useState(\"text\");\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [fields, setFields] = useState([]);\r\n  const [inputs, setInputs] = useState([]);\r\n  // let history = useHistory();\r\n  const history = createHistory();\r\n\r\n  const onSave = () => {\r\n    console.log(fields);\r\n    axios\r\n      .post(\"http://localhost:5000/forms/addForm\", {\r\n        formName: formName,\r\n        fields: fields,\r\n      })\r\n      .then((res) => console.log(res));\r\n\r\n    setFields([]);\r\n    setFormName(\"\");\r\n\r\n    // history.push(\"/\");\r\n    // history.go();\r\n    history.go(0);\r\n  };\r\n  // useEffect(() => {\r\n  //   console.log(fieldLabel);\r\n  // }, [fieldLabel]);\r\n  // useEffect(() => {\r\n  //   console.log(inputName);\r\n  // }, [inputName]);\r\n  // useEffect(() => {\r\n\r\n  // }, [inputType]);\r\n\r\n  const onSubmit = (e) => {\r\n    console.log(fieldLabel);\r\n    console.log(inputName);\r\n    console.log(inputType);\r\n    setFields([\r\n      ...fields,\r\n      { fieldLabel: fieldLabel, inputName: inputName, inputType: inputType },\r\n    ]);\r\n    e.preventDefault();\r\n    //console.log(fields);\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"entered\");\r\n    console.log(fields);\r\n    console.log(fields.length);\r\n  }, [fields]);\r\n  return (\r\n    <div className=\"FormBuilder\">\r\n      <form action=\"/FormBuilder\" method=\"get\">\r\n        <label htmlFor=\"flabel\"> field label:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"flabel\"\r\n          name=\"flabel\"\r\n          value={fieldLabel}\r\n          onChange={(text) => setFieldLabel(text.target.value)}\r\n        />\r\n        <br />\r\n        <br />\r\n        <label htmlFor=\"iname\">input name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"iname\"\r\n          name=\"iname\"\r\n          value={inputName}\r\n          onChange={(text) => setInputName(text.target.value)}\r\n        />\r\n        <br />\r\n        <br />\r\n        <select\r\n          id=\"inputType\"\r\n          name=\"input type\"\r\n          value={inputType}\r\n          onChange={(text) => setInputType(text.target.value)}\r\n        >\r\n          <option value=\"text\">text</option>\r\n          <option value=\"color\">color</option>\r\n          <option value=\"date\">date</option>\r\n          <option value=\"email\">email</option>\r\n          <option value=\"tel\">tel</option>\r\n          <option value=\"number\">number</option>\r\n        </select>\r\n        {/* {inputType === \"text\" ? (\r\n          <input\r\n            type=\"text\"\r\n            onChange={(val) => setInputVal(val.target.value)}\r\n          ></input>\r\n        ) : null}\r\n        {inputType === \"color\" ? (\r\n          <input\r\n            type=\"color\"\r\n            onChange={(val) => setInputVal(val.target.value)}\r\n          ></input>\r\n        ) : null}\r\n        {inputType === \"date\" ? (\r\n          <input\r\n            type=\"date\"\r\n            onChange={(val) => setInputVal(val.target.value)}\r\n          ></input>\r\n        ) : null}\r\n        {inputType === \"email\" ? (\r\n          <input\r\n            type=\"email\"\r\n            onChange={(val) => setInputVal(val.target.value)}\r\n          ></input>\r\n        ) : null}\r\n        {inputType === \"tel\" ? (\r\n          <input\r\n            type=\"tel\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            pattern=\"[0-9]{10}\"\r\n            onChange={(val) => setInputVal(val.target.value)}\r\n          ></input>\r\n        ) : null}\r\n        {inputType === \"number\" ? (\r\n          <input\r\n            type=\"number\"\r\n            onChange={(val) => setInputVal(val.target.value)}\r\n          ></input>\r\n        ) : null} */}\r\n\r\n        <input type=\"submit\" value=\"Submit\" onClick={onSubmit} />\r\n        <br></br>\r\n        <label htmlFor=\"formname\">form name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"formname\"\r\n          name=\"formname\"\r\n          value={formName}\r\n          onChange={(text) => setFormName(text.target.value)}\r\n        />\r\n        <input type=\"submit\" value=\"Save\" onClick={onSave} />\r\n      </form>\r\n\r\n      {fields.map((field) => (\r\n        <div>\r\n          <br></br>\r\n          <TextField\r\n            label={field.fieldLabel}\r\n            name={field.inputName}\r\n            type={field.inputType}\r\n          />\r\n\r\n          {/* <input for={field.inputName}>\r\n            field label: {field.fieldLabel}, input name: {field.inputName},\r\n            input type:{field.inputType}{\" \"}\r\n          </input> */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}