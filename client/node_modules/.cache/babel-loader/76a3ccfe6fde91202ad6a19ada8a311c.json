{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leont\\\\formsreact\\\\src\\\\dialog.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport PropTypes from \"prop-types\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\"; //import { NOTCOMPLETEFORM, SERVER_ERROR } from \"../constants/Types\";\n\nconst ResponsiveDialog = ({\n  open,\n  setOpen,\n  history,\n  message\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNoOption = () => {\n    handleClose();\n    history.push(\"/\");\n  };\n\n  const SuccessMessage = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Your form template was successfully created\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"do you wish to add another?\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleNoOption,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Yes\")));\n  const FailedMessageEmpty = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Error\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"You must add at least one field and a title\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n  const ErrorMessage = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Error\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Something went wrong,please try again\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n\n  const selectMessage = () => {\n    if (message === NOTCOMPLETEFORM) {\n      return FailedMessageEmpty;\n    } else if (message === SERVER_ERROR) {\n      return ErrorMessage;\n    } else {\n      return SuccessMessage;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, selectMessage()));\n};\n\nResponsiveDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  message: PropTypes.string.isRequired\n};\nexport default withRouter(ResponsiveDialog);","map":{"version":3,"sources":["C:/Users/leont/formsreact/src/dialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","PropTypes","useTheme","withRouter","ResponsiveDialog","open","setOpen","history","message","theme","fullScreen","breakpoints","down","handleClose","handleNoOption","push","SuccessMessage","FailedMessageEmpty","ErrorMessage","selectMessage","NOTCOMPLETEFORM","SERVER_ERROR","propTypes","bool","isRequired","func","object","string"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//import { NOTCOMPLETEFORM, SERVER_ERROR } from \"../constants/Types\";\r\nconst ResponsiveDialog = ({ open, setOpen, history, message }) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleNoOption = () => {\r\n    handleClose();\r\n    history.push(\"/\");\r\n  };\r\n  const SuccessMessage = (\r\n    <>\r\n      <DialogTitle id=\"responsive-dialog-title\">\r\n        {\"Your form template was successfully created\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>do you wish to add another?</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleNoOption} color=\"secondary\">\r\n          No\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n  const FailedMessageEmpty = (\r\n    <>\r\n      <DialogTitle id=\"responsive-dialog-title\">{\"Error\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          You must add at least one field and a title\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n  const ErrorMessage = (\r\n    <>\r\n      <DialogTitle id=\"responsive-dialog-title\">{\"Error\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Something went wrong,please try again\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n\r\n  const selectMessage = () => {\r\n    if (message === NOTCOMPLETEFORM) {\r\n      return FailedMessageEmpty;\r\n    } else if (message === SERVER_ERROR) {\r\n      return ErrorMessage;\r\n    } else {\r\n      return SuccessMessage;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        {selectMessage()}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nResponsiveDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default withRouter(ResponsiveDialog);\r\n"]},"metadata":{},"sourceType":"module"}