{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leont\\\\formsreact\\\\src\\\\FormSubmit.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Button from \"@material-ui/core/Button\";\nexport default function FormSubmit(props) {\n  const [inputName, setInputName] = useState(\"\");\n  const [fields, setFields] = useState([]);\n  const [formName, setFormName] = useState(\"\");\n  const [inputVal, setInputVal] = useState({});\n\n  function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  function continueOrNot() {\n    if (validateEmail(document.getElementById(\"emailfield\").value)) {\n      alert(\"valid\");\n      return true;\n    } else {\n      alert(\"email not valid\");\n      return false;\n    }\n  } //console.log(props.match.params.FormId);\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/forms/getFormName\", {\n      params: {\n        id: props.match.params.FormId\n      }\n    }).then(res => {\n      //console.log(res.data.fields);\n      setFormName(res.data.formName); //setType(res.data.inputType);\n    }); //console.log(forms);\n    //console.log(forms);\n  }, []);\n  useEffect(() => {\n    console.log(inputVal);\n  }, [inputVal]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/forms/getFormFields\", {\n      params: {\n        id: props.match.params.FormId\n      }\n    }).then(res => {\n      console.log(res);\n      setFields(res.data);\n\n      for (let i = 0; i < fields.length; i++) {\n        inputVal[fields[i]._id] = \"\";\n      } //setType(res.data.inputType);\n\n    }); //console.log(forms);\n    //console.log(forms);\n  }, []);\n\n  const handleSubmit = e => {\n    axios.post(\"http://localhost:5000/forms/addFormInput\", {\n      inputName: inputName,\n      inputVal: inputVal,\n      id: props.match.params.FormId\n    }).then(res => console.log(res)); // Alert();\n    //console.log(inputVal);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, formName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onsubmit: \"return continueOrNot()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, fields.map(field => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"flabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \" \", field.inputType, \": \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: field.inputType,\n    name: field.inputName,\n    value: inputVal[field._id],\n    onChange: name => inputVal[field._id] = name.target.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }\n    }),\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["C:/Users/leont/formsreact/src/FormSubmit.js"],"names":["React","useEffect","useState","axios","Container","SaveIcon","Button","FormSubmit","props","inputName","setInputName","fields","setFields","formName","setFormName","inputVal","setInputVal","validateEmail","email","re","test","continueOrNot","document","getElementById","value","alert","get","params","id","match","FormId","then","res","data","console","log","i","length","_id","handleSubmit","e","post","map","field","inputType","name","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function FormSubmit(props) {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [fields, setFields] = useState([]);\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [inputVal, setInputVal] = useState({});\r\n\r\n  function validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  function continueOrNot() {\r\n    if (validateEmail(document.getElementById(\"emailfield\").value)) {\r\n      alert(\"valid\");\r\n      return true;\r\n    } else {\r\n      alert(\"email not valid\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  //console.log(props.match.params.FormId);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/forms/getFormName\", {\r\n        params: {\r\n          id: props.match.params.FormId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data.fields);\r\n        setFormName(res.data.formName);\r\n\r\n        //setType(res.data.inputType);\r\n      });\r\n    //console.log(forms);\r\n\r\n    //console.log(forms);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(inputVal);\r\n  }, [inputVal]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/forms/getFormFields\", {\r\n        params: {\r\n          id: props.match.params.FormId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setFields(res.data);\r\n        for (let i = 0; i < fields.length; i++) {\r\n          inputVal[fields[i]._id] = \"\";\r\n        }\r\n\r\n        //setType(res.data.inputType);\r\n      });\r\n    //console.log(forms);\r\n\r\n    //console.log(forms);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    axios\r\n      .post(\"http://localhost:5000/forms/addFormInput\", {\r\n        inputName: inputName,\r\n        inputVal: inputVal,\r\n        id: props.match.params.FormId,\r\n      })\r\n\r\n      .then((res) => console.log(res));\r\n    // Alert();\r\n\r\n    //console.log(inputVal);\r\n  };\r\n  return (\r\n    <Container fixed>\r\n      <div>\r\n        {formName}\r\n        <br></br>\r\n\r\n        <form onsubmit=\"return continueOrNot()\">\r\n          {fields.map((field) => (\r\n            <div>\r\n              <label htmlFor=\"flabel\"> {field.inputType}: </label>\r\n\r\n              <input\r\n                required\r\n                type={field.inputType}\r\n                name={field.inputName}\r\n                value={inputVal[field._id]}\r\n                onChange={(name) => (inputVal[field._id] = name.target.value)}\r\n              ></input>\r\n              <br></br>\r\n            </div>\r\n          ))}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}