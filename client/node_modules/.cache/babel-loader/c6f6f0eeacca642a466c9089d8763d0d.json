{"ast":null,"code":"var _jsxFileName = \"C:\\\\formsreact\\\\client\\\\src\\\\FormSubmit.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { getFormName } from \"./actions/getFormName\";\nimport { getFormFields } from \"./actions/getFormFields\";\nimport { addFormInput } from \"./actions/addFormInput\";\nexport default function FormSubmit(props) {\n  const [inputName] = useState(\"\");\n  const [fields, setFields] = useState([]);\n  const [formName, setFormName] = useState(\"\");\n  const [inputVal] = useState({});\n  let history = useHistory();\n  useEffect(() => {\n    (async function getName() {\n      const formNameRes = await getFormName(props.match.params.FormId);\n      console.log(formNameRes);\n      setFormName(formNameRes.data.formName);\n    })();\n  });\n  useEffect(() => {\n    (async function getFields() {\n      const fieldsRes = await getFormFields(props.match.params.FormId);\n      setFields(fieldsRes.data);\n    })();\n  });\n\n  const handleSubmit = () => {\n    (async function addInputs() {\n      await addFormInput(props.match.params.FormId, inputName, inputVal);\n    })();\n\n    history.push(\"/\");\n    history.go();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, formName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, fields.map(field => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"flabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \" \", field.inputType, \": \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: field.inputType,\n    name: field.inputName,\n    value: inputVal[field._id],\n    onChange: name => inputVal[field._id] = name.target.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["C:/formsreact/client/src/FormSubmit.js"],"names":["React","useEffect","useState","Container","SaveIcon","Button","useHistory","getFormName","getFormFields","addFormInput","FormSubmit","props","inputName","fields","setFields","formName","setFormName","inputVal","history","getName","formNameRes","match","params","FormId","console","log","data","getFields","fieldsRes","handleSubmit","addInputs","push","go","map","field","inputType","_id","name","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getFormName } from \"./actions/getFormName\";\r\nimport { getFormFields } from \"./actions/getFormFields\";\r\nimport { addFormInput } from \"./actions/addFormInput\";\r\n\r\nexport default function FormSubmit(props) {\r\n  const [inputName] = useState(\"\");\r\n  const [fields, setFields] = useState([]);\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [inputVal] = useState({});\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async function getName() {\r\n      const formNameRes = await getFormName(props.match.params.FormId);\r\n      console.log(formNameRes);\r\n      setFormName(formNameRes.data.formName);\r\n    })();\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async function getFields() {\r\n      const fieldsRes = await getFormFields(props.match.params.FormId);\r\n      setFields(fieldsRes.data);\r\n    })();\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    (async function addInputs() {\r\n      await addFormInput(props.match.params.FormId, inputName, inputVal);\r\n    })();\r\n    history.push(\"/\");\r\n    history.go();\r\n  };\r\n  return (\r\n    <Container fixed>\r\n      <div>\r\n        {formName}\r\n        <br></br>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {fields.map((field) => (\r\n            <div>\r\n              <label htmlFor=\"flabel\"> {field.inputType}: </label>\r\n              <br />\r\n              <input\r\n                required\r\n                type={field.inputType}\r\n                name={field.inputName}\r\n                value={inputVal[field._id]}\r\n                onChange={(name) => (inputVal[field._id] = name.target.value)}\r\n              ></input>\r\n              <br></br>\r\n            </div>\r\n          ))}\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}