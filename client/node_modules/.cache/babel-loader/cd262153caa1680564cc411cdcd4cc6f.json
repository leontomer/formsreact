{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leont\\\\formsreact\\\\src\\\\FormSubmissions.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport FormBuilder from \"./FormBuilder\";\nimport FormSubmit from \"./FormSubmit\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nexport default function FormSubmissions(props) {\n  const [formFields, setFormFields] = useState([]);\n  const [formInputs, setFormInputs] = useState([]);\n  useEffect(() => {\n    console.log(props.match.params.FormId);\n    axios.get(\"http://localhost:5000/forms/getFormFields\", {\n      params: {\n        id: props.match.params.FormId\n      }\n    }).then(res => {\n      // console.log(res);\n      console.log(res);\n      setFormFields(res.data);\n    });\n    axios.get(\"http://localhost:5000/forms/getFormInputs\", {\n      params: {\n        id: props.match.params.FormId\n      }\n    }).then(res => {\n      // console.log(res);\n      console.log(res);\n      setFormInputs(res.data);\n    }); //console.log(forms);\n    //console.log(forms);\n  }, []); // useEffect(() => {\n  // }, []);\n  // useEffect(() => {\n  //   console.log(forms);\n  //   //console.log(forms);\n  // }, [forms]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    key: formFields._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, formFields.map(field => {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }\n    }, field.inputName);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, formInputs.map(rows => {\n    {\n      rows.inputs.map(input => {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          key: rows._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }\n        }, input));\n      });\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/leont/formsreact/src/FormSubmissions.js"],"names":["React","useEffect","useState","axios","FormBuilder","FormSubmit","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","FormSubmissions","props","formFields","setFormFields","formInputs","setFormInputs","console","log","match","params","FormId","get","id","then","res","data","_id","map","field","inputName","rows","inputs","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport FormBuilder from \"./FormBuilder\";\r\nimport FormSubmit from \"./FormSubmit\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport default function FormSubmissions(props) {\r\n  const [formFields, setFormFields] = useState([]);\r\n  const [formInputs, setFormInputs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.match.params.FormId);\r\n    axios\r\n      .get(\"http://localhost:5000/forms/getFormFields\", {\r\n        params: {\r\n          id: props.match.params.FormId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        console.log(res);\r\n        setFormFields(res.data);\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/forms/getFormInputs\", {\r\n        params: {\r\n          id: props.match.params.FormId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        console.log(res);\r\n\r\n        setFormInputs(res.data);\r\n      });\r\n\r\n    //console.log(forms);\r\n\r\n    //console.log(forms);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   console.log(forms);\r\n\r\n  //   //console.log(forms);\r\n  // }, [forms]);\r\n\r\n  return (\r\n    <div className=\"FormsList\">\r\n      <TableContainer component={Paper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow key={formFields._id}>\r\n              {formFields.map((field) => {\r\n                return <TableCell>{field.inputName}</TableCell>;\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {formInputs.map((rows) => {\r\n              {\r\n                rows.inputs.map((input) => {\r\n                  return (\r\n                    <TableRow key={rows._id}>\r\n                      <TableCell>{input}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                });\r\n              }\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}