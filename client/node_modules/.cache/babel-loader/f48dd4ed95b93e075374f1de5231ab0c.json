{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leont\\\\formsreact\\\\client\\\\src\\\\FormBuilder.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { addForm } from \"./actions/addForm\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nexport default function FormBuilder(props) {\n  const [fieldLabel, setFieldLabel] = useState(\"\");\n  const [inputName, setInputName] = useState(\"\");\n  const [inputType, setInputType] = useState(\"text\");\n  const [formName, setFormName] = useState(\"\");\n  const [fields, setFields] = useState([]);\n  const [inputs, setInputs] = useState([]);\n  let history = useHistory();\n\n  const onSave = () => {\n    console.log(fields);\n\n    (async function addFormFunc() {\n      await addForm(formName, fields);\n    })();\n\n    history.push(\"/\");\n    history.go();\n  };\n\n  const onSubmit = e => {\n    setFields([...fields, {\n      fieldLabel: fieldLabel,\n      inputName: inputName,\n      inputType: inputType\n    }]);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"flabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \" field label: \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"flabel\",\n    label: \"Required\",\n    value: fieldLabel,\n    onChange: text => setFieldLabel(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"iname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"input name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"iname\",\n    name: \"iname\",\n    value: inputName,\n    onChange: text => setInputName(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    value: inputType,\n    onChange: text => setInputType(text.target.value),\n    label: \"Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"text\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"color\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"date\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"tel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"tel\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"number\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onClick: onSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"form name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"formname\",\n    name: \"formname\",\n    value: formName,\n    onChange: text => setFormName(text.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), fields.map(field => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: field.fieldLabel,\n    name: field.inputName,\n    type: field.inputType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/leont/formsreact/client/src/FormBuilder.js"],"names":["React","useEffect","useState","addForm","useHistory","TextField","SaveIcon","Button","Container","Select","MenuItem","FormBuilder","props","fieldLabel","setFieldLabel","inputName","setInputName","inputType","setInputType","formName","setFormName","fields","setFields","inputs","setInputs","history","onSave","console","log","addFormFunc","push","go","onSubmit","e","preventDefault","text","target","value","map","field"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { addForm } from \"./actions/addForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function FormBuilder(props) {\r\n  const [fieldLabel, setFieldLabel] = useState(\"\");\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputType, setInputType] = useState(\"text\");\r\n  const [formName, setFormName] = useState(\"\");\r\n  const [fields, setFields] = useState([]);\r\n  const [inputs, setInputs] = useState([]);\r\n  let history = useHistory();\r\n\r\n  const onSave = () => {\r\n    console.log(fields);\r\n    (async function addFormFunc() {\r\n      await addForm(formName, fields);\r\n    })();\r\n\r\n    history.push(\"/\");\r\n    history.go();\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    setFields([\r\n      ...fields,\r\n      { fieldLabel: fieldLabel, inputName: inputName, inputType: inputType },\r\n    ]);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container fixed>\r\n      <div>\r\n        <form onClick={onSubmit}>\r\n          <br></br>\r\n          <label htmlFor=\"flabel\"> field label: </label>\r\n\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"flabel\"\r\n            label=\"Required\"\r\n            value={fieldLabel}\r\n            onChange={(text) => setFieldLabel(text.target.value)}\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"iname\">input name: </label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"iname\"\r\n            name=\"iname\"\r\n            value={inputName}\r\n            onChange={(text) => setInputName(text.target.value)}\r\n          />\r\n          <br />\r\n\r\n          <Select\r\n            required\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={inputType}\r\n            onChange={(text) => setInputType(text.target.value)}\r\n            label=\"Type\"\r\n          >\r\n            <MenuItem value=\"text\">text</MenuItem>\r\n            <MenuItem value=\"color\">color</MenuItem>\r\n            <MenuItem value=\"date\">date</MenuItem>\r\n            <MenuItem value=\"email\">email</MenuItem>\r\n            <MenuItem value=\"tel\">tel</MenuItem>\r\n            <MenuItem value=\"number\">number</MenuItem>\r\n          </Select>\r\n          <br></br>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n            Add\r\n          </Button>\r\n        </form>\r\n        <br></br>\r\n        <form onClick={onSave}>\r\n          <label htmlFor=\"formname\">form name: </label>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"formname\"\r\n            name=\"formname\"\r\n            value={formName}\r\n            onChange={(text) => setFormName(text.target.value)}\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n        <br></br>\r\n        {fields.map((field) => (\r\n          <div>\r\n            <TextField\r\n              label={field.fieldLabel}\r\n              name={field.inputName}\r\n              type={field.inputType}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}